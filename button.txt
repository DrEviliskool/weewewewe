(function () {
    'use strict';

    const apiKey = 'AIzaSyAw68RiUXrzIxYEOb_YQZFi75CbDa_mKkg';
    const savedId = [
        10000037, //ana
        10002324, //dmg
        10014805, //alak
        10002836, //mizo
        10001066, //vert
        10014215, //maro
        10003784, //gih
        10000161, //doma
        10000783, //Malt
        10001621, //HOS
        10037152, //Sisi
        10002839, //Mazika
    ];
    const originalLog = console.log;

    console.log = function (...args) {
        args.forEach(async (arg) => {
            const argStr = String(arg);
            if (savedId.some(id => argStr.startsWith(id))) {
                const customAlert = document.createElement('div');
                customAlert.textContent = 'Access successful';
                Object.assign(customAlert.style, {
                    position: 'fixed', top: '20px', left: '50%',
                    transform: 'translateX(-50%)', backgroundColor: '#333',
                    color: '#fff', padding: '10px 20px', borderRadius: '5px',
                    boxShadow: '0 2px 5px rgba(0, 0, 0, 0.2)', zIndex: '9999'
                });
                document.body.appendChild(customAlert);
                setTimeout(() => {
                    document.body.removeChild(customAlert);
                }, 680);

                async function buttonlmaoo() {
                    (function () {
                        'use strict';
                        let answers = [];
                        let popupTimeout;

                        function findCorrectAnswer(data) {
                            if (Array.isArray(data)) {
                                data.forEach(async (item, indexx) => {
                                    if (item.questions) {
                                        const questionType = item.questions.type;
                                        const questionNumber = item.question;

                                        await fetch(`https://blb2024-o5xlbifnea-uc.a.run.app/questions/${questionNumber}`, {
                                            method: "GET",
                                            headers: {
                                                "accept": "*/*",
                                                "content-type": "application/json",
                                                "origin": "https://student.nis-blb.com",
                                                "referer": "https://student.nis-blb.com/",
                                                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IkFiZGVscmFobWFuIEFzaHJhZiBGYXJvdWsiLCJpZCI6MTAwMDAwMzcsInJvbGUiOiJzdHVkZW50IiwiY29ob3J0IjozOTIsImJ5X3N1YmplY3QiOm51bGwsImdyYWRlIjo5NSwiY2xhc3Nyb29tIjozMjYsImlhdCI6MTc0NDYxNzI4MSwiZXhwIjoxNzQ0NjE3MzQxfQ.RigkTycjWT_Ea-Gh9q-hH0M1zkr6ihbCvCaBJ9K_bwQ",
                                                "type": "student"
                                            }
                                        })
                                            .then(res => res.json())
                                            .then(async (data) => {
                                                const options = await data.questions_options || [];
                                                const correctOption = await options.find(opt => opt.correct);

                                                if (correctOption) {
                                                    const optionLabels = ["A", "B", "C", "D", "E", "F", "G"];
                                                    const index = await options.indexOf(correctOption);
                                                    const label = await optionLabels[index] || await `Option ${index + 1}`;
                                                    await answers.push(`${indexx + 1}. ${label} (${correctOption.title})`);
                                                    await console.log(`Correct Answer: ${label}) ${correctOption.title}`);
                                                } else {
                                                    console.log("No correct option found.");
                                                }
                                            })
                                            .catch(err => console.log(err));

                                        if (questionType === "True/False" && item.answer) {
                                            const tfAnswer = item.questions.answer === "Right" ? "✅" : "❌";
                                            console.log(`${index + 1}. - ${tfAnswer}`);
                                        }
                                    }
                                });
                            }
                        }

                        function showPopup(content) {
                            const popup = document.createElement('div');
                            popup.innerText = content;
                            Object.assign(popup.style, {
                                position: 'fixed', top: '10px', right: '10px',
                                padding: '10px', backgroundColor: 'rgba(0, 0, 0, 0.4)',
                                color: '#fff', borderRadius: '15px', zIndex: '10000',
                                fontSize: '14px', maxWidth: '300px', wordWrap: 'break-word',
                                fontFamily: 'Arial, sans-serif',
                                boxShadow: '0 2px 10px rgba(0, 0, 0, 0.5)'
                            });
                            document.body.appendChild(popup);
                            popupTimeout = setTimeout(() => popup.remove(), 600);
                            popup.addEventListener('mouseover', () => clearTimeout(popupTimeout));
                            popup.addEventListener('mouseout', () => {
                                popupTimeout = setTimeout(() => popup.remove(), 600);
                            });
                        }

                        function createButton() {
                            const button = document.createElement('button');
                            button.innerText = 'S';
                            Object.assign(button.style, {
                                position: 'fixed', top: '10px', right: '10px', zIndex: '9999',
                                padding: '8px', backgroundColor: 'rgba(0, 0, 0, 0.5)', color: '#fff',
                                border: 'none', borderRadius: '5px', cursor: 'pointer',
                                opacity: '0', transition: 'opacity 0.5s ease'
                            });

                            button.onclick = () => {
                                if (answers.length > 0) {
                                    showPopup(answers.join('\n'));
                                } else {
                                    showPopup('No answers found yet!!');
                                }
                            };

                            button.addEventListener('mouseover', () => button.style.opacity = '1');
                            button.addEventListener('mouseout', () => button.style.opacity = '0');
                            document.body.appendChild(button);
                        }

                        const originalFetch = window.fetch;
                        window.fetch = function () {
                            return originalFetch.apply(this, arguments).then(async response => {
                                const clonedResponse = response.clone();
                                try {
                                    const jsonData = await clonedResponse.json();
                                    findCorrectAnswer(jsonData);
                                } catch (e) { }
                                return response;
                            });
                        };

                        const originalXHR = XMLHttpRequest.prototype.open;
                        XMLHttpRequest.prototype.open = function () {
                            this.addEventListener('load', function () {
                                if (this.responseType === 'arraybuffer' && this.response) {
                                    let decoded = new TextDecoder('utf-8').decode(this.response);
                                    try {
                                        const parsed = JSON.parse(decoded);
                                        findCorrectAnswer(parsed);
                                    } catch (e) { }
                                } else if (this.responseType === '' || this.responseType === 'text') {
                                    try {
                                        const response = JSON.parse(this.responseText);
                                        findCorrectAnswer(response);
                                    } catch (e) { }
                                } else if (this.responseType === 'json' && this.response) {
                                    findCorrectAnswer(this.response);
                                }
                            });
                            return originalXHR.apply(this, arguments);
                        };

                        createButton();
                    })();
                }

                await buttonlmaoo();
            }
        });

        originalLog.apply(console, args);
    };
})();
