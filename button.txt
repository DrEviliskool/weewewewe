(function () {
    'use strict';

    const apiKey = 'AIzaSyAw68RiUXrzIxYEOb_YQZFi75CbDa_mKkg';
    const savedId = [
        10000037, //Belal sherrif 11d
        10002324, //Belal sherrif 11d
        10014805, //Belal sherrif 11d
        10002836, //Belal sherrif 11d
        10001066, //Belal sherrif 11d
        10014215, //Belal sherrif 11d
        10003870, //Belal sherrif 11d
        10003784, //Belal sherrif 11d
        10002839, //Belal sherrif 11d
        10000161, //Belal sherrif 11d
        10002724, //Belal sherrif 11d
        10014808, //Belal sherrif 11d
        10000783, //Belal sherrif 11d
        10001621, //Belal sherrif 11d
    ];
    const originalLog = console.log;
    console.log = function (...args) {
        args.forEach(async (arg) => {
            const argStr = String(arg);
            if (savedId.some(id => argStr.startsWith(id))) {
                const customAlert = document.createElement('div')
                customAlert.textContent = 'Access successful';
                customAlert.style.position = 'fixed';
                customAlert.style.top = '20px';
                customAlert.style.left = '50%';
                customAlert.style.transform = 'translateX(-50%)';
                customAlert.style.backgroundColor = '#333';
                customAlert.style.color = '#fff';
                customAlert.style.padding = '10px 20px';
                customAlert.style.borderRadius = '5px';
                customAlert.style.boxShadow = '0 2px 5px rgba(0, 0, 0, 0.2)';
                customAlert.style.zIndex = '9999';
                document.body.appendChild(customAlert);
                setTimeout(() => {
                    document.body.removeChild(customAlert)
                }, 1000)
                async function buttonlmaoo() {
                    (function () {
                        'use strict';
                        let answers = [];
                        let popupTimeout;
                        function findCorrectAnswer(data) {
                            if (Array.isArray(data)) {
                                data.forEach((item, index) => {
                                    if (item.questions) {
                                        const questionType = item.questions.type;
                                        if (questionType === "Multiple Choice" && item.questions.questions_options) {
                                            item.questions.questions_options.forEach((option, optionIndex) => {
                                                if (option.correct) {
                                                    const answerLabels = ['A', 'B', 'C', 'D'];
                                                    answers.push(`${index + 1}. - ${answerLabels[optionIndex]} (${option.title})`);
                                                }
                                            });
                                        }
                                        else if (questionType === "True/False" && item.answer) {
                                            const tfAnswer = item.questions.answer === "Right" ? "✅" : "❌";
                                            answers.push(`${index + 1}. - ${tfAnswer}`);
                                        }
                                    }
                                });
                            }
                        }
                        function showPopup(content) {
                            const popup = document.createElement('div');
                            popup.innerText = content;
                            popup.style.position = 'fixed';
                            popup.style.bottom = '10px';
                            popup.style.left = '10px';
                            popup.style.padding = '10px';
                            popup.style.backgroundColor = 'rgba(0, 0, 0, 0.4)';
                            popup.style.color = '#fff';
                            popup.style.borderRadius = '15px';
                            popup.style.zIndex = '10000';
                            popup.style.fontSize = '14px';
                            popup.style.maxWidth = '300px';
                            popup.style.wordWrap = 'break-word';
                            popup.style.fontFamily = 'Arial, sans-serif';
                            popup.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.5)';
                            document.body.appendChild(popup);
                            popupTimeout = setTimeout(() => {
                                popup.remove();
                            }, 600);

                            popup.addEventListener('mouseover', () => {
                                clearTimeout(popupTimeout);
                            });
                            popup.addEventListener('mouseout', () => {
                                popupTimeout = setTimeout(() => {
                                    popup.remove();
                                }, 600);
                            });
                        }
                        function createButton() {
                            const button = document.createElement('button');
                            button.innerText = 'S';
                            button.style.position = 'fixed';
                            button.style.bottom = '10px';
                            button.style.left = '10px';
                            button.style.zIndex = '9999';
                            button.style.padding = '8px';
                            button.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
                            button.style.color = '#fff';
                            button.style.border = 'none';
                            button.style.borderRadius = '5px';
                            button.style.cursor = 'pointer';
                            button.style.opacity = '0';
                            button.style.transition = 'opacity 0.5s ease';
                            button.onclick = function () {
                                if (answers.length > 0) {
                                    showPopup(answers.join('\n'));
                                } else {
                                    showPopup('No answers found yet!!');
                                }
                            };
                            button.addEventListener('mouseover', () => {
                                button.style.opacity = '1';
                            });
                            button.addEventListener('mouseout', () => {
                                button.style.opacity = '0';
                            });
                            document.body.appendChild(button);
                        }
                        const originalFetch = window.fetch;
                        window.fetch = function () {
                            return originalFetch.apply(this, arguments).then(async response => {
                                const clonedResponse = response.clone();
                                try {
                                    const jsonData = await clonedResponse.json();
                                    findCorrectAnswer(jsonData);
                                } catch (e) { }
                                return response;
                            });
                        };
                        const originalXHR = XMLHttpRequest.prototype.open;
                        XMLHttpRequest.prototype.open = function () {
                            this.addEventListener('load', function () {
                                if (this.responseType === 'arraybuffer' && this.response) {
                                    let decodedResponse = new TextDecoder('utf-8').decode(this.response);
                                    try {
                                        const parsedData = JSON.parse(decodedResponse);
                                        findCorrectAnswer(parsedData);
                                    } catch (e) { }
                                } else if (this.responseType === '' || this.responseType === 'text') {
                                    try {
                                        const response = JSON.parse(this.responseText);
                                        findCorrectAnswer(response);
                                    } catch (e) { }
                                } else if (this.responseType === 'json' && this.response) {
                                    findCorrectAnswer(this.response);
                                }
                            });
                            return originalXHR.apply(this, arguments);
                        };
                        createButton();
                    })();
                }
                async function geminilmaoo() {
                    'use strict';


                    async function getGeminiResponse(prompt) {
                        const apiUrl = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=' + apiKey;

                        const body = {
                            contents: [{
                                parts: [{
                                    text: prompt
                                }]
                            }]
                        };

                        return fetch(apiUrl, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(body)
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error(`HTTP error! Status: ${response.status}`);
                                }
                                return response.json();
                            })
                            .then(data => {
                                const resultText = data.candidates[0].content.parts[0].text.trim();
                                navigator.clipboard.writeText(resultText).catch(err => console.error("Clipboard error:", err));
                                showCheckmark();
                                return resultText;
                            })
                            .catch(error => {
                                console.error("Error fetching from Gemini:", error);
                                return "Error: Could not retrieve response from Gemini.";
                            });
                    }

                    function showCheckmark() {
                        const checkmark = document.createElement('div');
                        checkmark.innerText = '✅';
                        checkmark.style.position = 'fixed';
                        checkmark.style.top = '45px';
                        checkmark.style.right = '15px';
                        checkmark.style.fontSize = '20px';
                        checkmark.style.zIndex = '10002';
                        checkmark.style.transition = 'opacity 0.5s ease';
                        document.body.appendChild(checkmark);

                        setTimeout(() => {
                            checkmark.remove();
                        }, 800);
                    }

                    function showPrompt() {
                        const promptContainer = document.createElement('div');
                        promptContainer.style.position = 'fixed';
                        promptContainer.style.top = '55%';
                        promptContainer.style.left = '40%';
                        promptContainer.style.transform = 'translate(-50%, -50%)';
                        promptContainer.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';
                        promptContainer.style.padding = '5px';
                        promptContainer.style.borderRadius = '4px';
                        promptContainer.style.boxShadow = '0 2px 6px rgba(0, 0, 0, 0.2)';
                        promptContainer.style.zIndex = '10001';
                        promptContainer.style.opacity = '0.8';
                        promptContainer.style.transition = 'opacity 0.3s ease';
                        promptContainer.style.width = '150px';

                        const promptInput = document.createElement('input');
                        promptInput.type = 'text';
                        promptInput.placeholder = 'Type prompt here';
                        promptInput.style.width = '100%';
                        promptInput.style.padding = '5px';
                        promptInput.style.borderRadius = '3px';
                        promptInput.style.border = '1px solid rgba(0, 0, 0, 0.3)';
                        promptInput.style.fontSize = '12px';
                        promptInput.style.opacity = '0.9';

                        promptContainer.appendChild(promptInput);
                        document.body.appendChild(promptContainer);

                        promptInput.focus();

                        function removePrompt() {
                            promptContainer.remove();
                            document.removeEventListener('click', onOutsideClick);
                        }

                        function onOutsideClick(event) {
                            if (!promptContainer.contains(event.target) && event.target !== promptInput) {
                                removePrompt();
                            }
                        }

                        setTimeout(() => {
                            document.addEventListener('click', onOutsideClick);
                        }, 10);

                        promptInput.addEventListener('keydown', async function (event) {
                            if (event.key === 'Enter') {
                                const promptText = promptInput.value;
                                removePrompt();
                                await getGeminiResponse(promptText);
                            } else if (event.key === 'Escape') {
                                removePrompt();
                            }
                        });
                    }

                    function createButton() {
                        const button = document.createElement('button');
                        button.innerText = 'A';
                        button.style.position = 'fixed';
                        button.style.top = '10px';
                        button.style.right = '10px';
                        button.style.zIndex = '9999';
                        button.style.padding = '8px';
                        button.style.backgroundColor = 'rgba(0, 0, 0, 0.4)';
                        button.style.color = '#fff';
                        button.style.border = 'none';
                        button.style.borderRadius = '50%';
                        button.style.cursor = 'pointer';
                        button.style.opacity = '0';
                        button.style.transition = 'opacity 0.5s ease';

                        button.addEventListener('mouseover', () => {
                            button.style.opacity = '1';
                        });

                        button.addEventListener('mouseout', () => {
                            button.style.opacity = '0';
                        });

                        button.onclick = showPrompt;

                        document.body.appendChild(button);
                    }

                    async function init() {
                        createButton();
                    }

                    await init();
                }


                await buttonlmaoo();
                await geminilmaoo();
            }
        });

        originalLog.apply(console, args);
    };
})();
